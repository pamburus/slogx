linters-settings:
  dupl:
    threshold: 150
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 2
  gocyclo:
    min-complexity: 32
  goimports:
    local-prefixes: github.com/pamburus
  lll:
    line-length: 140
  nolintlint:
    allow-unused: true # report any unused nolint directives
    require-explanation: true # require an explanation for nolint directives
    require-specific: true # don't require nolint directives to be specific about which linter is being skipped
  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: true
      rules:
        # Any struct tag type can be used.
        # Support string case: `camel`, `pascal`, `kebab`, `snake`, `upperSnake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`, `header`.
        json: kebab
        yaml: kebab

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - fatcontext
    - forbidigo
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    - intrange
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint

issues:
  # Disable this option because it causes golint to hide almost all issues
  exclude-use-default: false
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - linters: [gocritic]
      text: '^singleCaseSwitch:'
    # - linters: [gosec]
    #   text: '^G115:' # false positives
    - linters: [gosec] # Use of unsafe calls should be audited
      text: '^G103:'   # `unsafe` is used for optimizations and is covered by unit tests
    - path: '_test\.go$'
      text: '^dot-imports:'
      linters:
        - revive
    - path: '_test\.go$'
      linters:
        - dupl
        - err113
        - gocognit
        - goconst
        - lll
        - maintidx
        - testpackage
        - varnamelen
        - wsl
    - linters: [wsl]
      text: '^append only allowed to cuddle with appended value$'
    - linters: [wrapcheck]
      text: '^error returned from interface method should be wrapped:'
